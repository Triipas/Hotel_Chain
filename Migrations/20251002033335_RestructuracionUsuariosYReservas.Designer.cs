// <auto-generated />
using System;
using Hotel_chain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_chain.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002033335_RestructuracionUsuariosYReservas")]
    partial class RestructuracionUsuariosYReservas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Hotel_chain.Models.Entities.Habitacion", b =>
                {
                    b.Property<int>("HabitacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("habitacion_id");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("capacidad");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Disponible")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("disponible");

                    b.Property<int>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<string>("NumeroHabitacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("numero_habitacion");

                    b.Property<decimal>("PrecioNoche")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_noche");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo");

                    b.HasKey("HabitacionId");

                    b.HasIndex("HotelId");

                    b.ToTable("Habitaciones", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("hotel_id");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ciudad");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombre");

                    b.Property<string>("TelefonoContacto")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono_contacto");

                    b.HasKey("HotelId");

                    b.ToTable("Hoteles", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Huesped", b =>
                {
                    b.Property<int>("HuespedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("huesped_id");

                    b.Property<string>("NotasInternas")
                        .HasColumnType("longtext")
                        .HasColumnName("notas_internas");

                    b.Property<string>("Preferencias")
                        .HasColumnType("longtext")
                        .HasColumnName("preferencias");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("HuespedId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Huespedes", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Imagen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int?>("HabitacionId")
                        .HasColumnType("int")
                        .HasColumnName("HabitacionId");

                    b.Property<int?>("HotelId")
                        .HasColumnType("int")
                        .HasColumnName("HotelId");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NombreArchivo");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("HotelId");

                    b.ToTable("Imagenes", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("reserva_id");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado_pago");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_fin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_inicio");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_modificacion");

                    b.Property<int>("HabitacionId")
                        .HasColumnType("int")
                        .HasColumnName("habitacion_id");

                    b.Property<int>("NumeroHuespedes")
                        .HasColumnType("int")
                        .HasColumnName("numero_huespedes");

                    b.Property<int>("NumeroNoches")
                        .HasColumnType("int")
                        .HasColumnName("numero_noches");

                    b.Property<string>("NumeroReserva")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("numero_reserva");

                    b.Property<decimal>("PrecioTotal")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("precio_total");

                    b.Property<string>("SolicitudesEspeciales")
                        .HasColumnType("longtext")
                        .HasColumnName("solicitudes_especiales");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("ReservaId");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("NumeroReserva")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.Property<string>("PermisosExtra")
                        .HasColumnType("longtext")
                        .HasColumnName("permisos_extra");

                    b.Property<string>("RolDetallado")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("rol_detallado");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("StaffId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("apellido");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("contraseña");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("documento");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rol");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.Property<DateTime?>("UltimoAcceso")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("ultimo_acceso");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Habitacion", b =>
                {
                    b.HasOne("Hotel_chain.Models.Entities.Hotel", "Hotel")
                        .WithMany("Habitaciones")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Huesped", b =>
                {
                    b.HasOne("Hotel_chain.Models.Entities.Usuario", "Usuario")
                        .WithOne("Huesped")
                        .HasForeignKey("Hotel_chain.Models.Entities.Huesped", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Imagen", b =>
                {
                    b.HasOne("Hotel_chain.Models.Entities.Habitacion", "Habitacion")
                        .WithMany("Imagenes")
                        .HasForeignKey("HabitacionId");

                    b.HasOne("Hotel_chain.Models.Entities.Hotel", "Hotel")
                        .WithMany("Imagenes")
                        .HasForeignKey("HotelId");

                    b.Navigation("Habitacion");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Reserva", b =>
                {
                    b.HasOne("Hotel_chain.Models.Entities.Habitacion", "Habitacion")
                        .WithMany("Reservas")
                        .HasForeignKey("HabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel_chain.Models.Entities.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Staff", b =>
                {
                    b.HasOne("Hotel_chain.Models.Entities.Usuario", "Usuario")
                        .WithOne("Staff")
                        .HasForeignKey("Hotel_chain.Models.Entities.Staff", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Habitacion", b =>
                {
                    b.Navigation("Imagenes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Hotel", b =>
                {
                    b.Navigation("Habitaciones");

                    b.Navigation("Imagenes");
                });

            modelBuilder.Entity("Hotel_chain.Models.Entities.Usuario", b =>
                {
                    b.Navigation("Huesped");

                    b.Navigation("Reservas");

                    b.Navigation("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
